DESC EMP; 
-- 기본적으로 SELECT *FROM EMP ; 가 들어간다  

SELECT * FROM EMP;


SELECT EMPNO , ENAME ,DEPTNO
FROM EMP ;

 --오직하나 중복없이 DISTINCT
SELECT DISTINCT JOB, DEPTNO FROM EMP; 

SELECT ALL JOB, DEPTNO
FROM EMP; 

 --- 한 열로 연산 가능 , 컬럼 연산 가능 , 연수입을 한개의 열로  AS이용해서 표현 
SELECT ENAME,SAL,COMM ,SAL*12+COMM AS ANN
FROM EMP; 

SELECT
    * FROM EMP
    ORDER BY SAL DESC; 
    
SELECT * FROM EMP
ORDER BY EMPNO;
-- 모든 열 , 부서번호 오름차 , 월급여 내립차. 그러나 올더 바이는 잘 안쓴다 느려져서 
SELECT * FROM EMP
ORDER BY SAL DESC;

SELECT DISTINCT JOB FROM EMP;

SELECT
    * FROM EMP
    WHERE DEPTNO >= 30  ;
- 사원번호가 7782 인 사람만 골라내기 WHERE 함수 사용하기 !  WHERE IF 처럼 잘쓰인다.  
SELECT*FROM EMP
    WHERE EMPNO = 7782;



----- AND , OR 
-- SAL가 1000보다 큰것 골라내기
SELECT *FROM EMP
WHERE SAL >=1500;  

-- JOB 이  SALESMAN 인 사람 
-- AND 연결 
SELECT *FROM EMP
WHERE DEPTNO >=30 AND JOB = 'SALESMAN';  

--- 사원번호 부서번호 
SELECT *FROM EMP
WHERE EMPNO = 7499 AND DEPTNO =30;


SELECT *FROM EMP
WHERE SAL * 12 >= 3600 AND SAL *12 <15000 ;

-- 이름이 MAR 보다 뒤에 있는 사람
SELECT *FROM EMP
WHERE ENAME >= 'MAR' ;

--- NOT의 위치  
SELECT *FROM EMP
WHERE JOB IN ('MANAGER','SALESMAN','CLERK');

SELECT *FROM EMP
WHERE NOT JOB IN ('MANAGER','SALESMAN','CLERK');

SELECT *FROM EMP
WHERE JOB NOT IN ('MANAGER','SALESMAN','CLERK');

-- MANGER 아닌 
SELECT *FROM EMP
WHERE JOB <> 'MANAGER' ; 
<> != NOT 

----ㅡM으로 시작

SELECT ENAME,DEPTNO FROM EMP
WHERE ENAME LIKE 'A%’;

 
 SELECT *FROM EMP
WHERE ENAME LIKE 'MAR%';

--  중간에 AM 
SELECT *FROM EMP
WHERE ENAME LIKE '%AM%' ;

--  두번째 L 
SELECT *FROM EMP
WHERE ENAME LIKE '_L%';
다 보여주기 위해 * 표시 

IN
BETWEEN
LIKE
IS NULL
IS NOT NULL 
.ISNA()

SELECT ENAME, COMM 
FROM EMP 
WHERE COMM IS NOT NULL ; 


--합집합 
-- SAL >=2000 -- SAL <= 3000 집합
SELECT * FROM EMP 
WHERE SAL <=3000  
UNION
SELECT * FROM EMP 
WHERE SAL >= 2000 ; 

-INTER  사원 이름이 S로 끝난ㄴ 사원데이터 bonus


SELECT * FROM EMP 
WHERE ENAME LIKE '%S';


SELECT ENAME ,UPPER(ENAME),LOWER(ENAME),INITCAP('ENAME') FROM EMP;

-- 5글자 이상 사원 
SELECT ENAME FROM EMP
WHERE LENGTH(ENAME) >=5; 


SELECT JOB , SUBSTR(JOB,1,2) FROM EMP;



SELECT KENG


 ``6자 이상 잡 
SELECT *
FROM EMP
WHERE LENGTH(JOB) >= 6;



컨트롤 알트 스프트 알트 , 복사  컨 시프트 

- 찾는 함수
SELECT * FROM EMP
WHERE INSTR(ENAME,'S')> 0;

SELECT * FROM EMP
WHERE ENAME LIKE( '%S%' );

- 여백채우기

SELECT 'Oracle' , 
LPAD('Oracle',10,'#') as lpad_1 ,
RPAD('Oracle',10,'#') as lpad_1 

FROM DUAL;

-- TRIM
SELECT TRIM('  ORACLE  '),
LTRIM('    ORACLE'),
RTRIM('ORACLE    ')
FROM DUAL;


-- 반올림 
SELECT ROUND(1234.5678),
ROUND(1234.5678 , 2),
ROUND(1234.5678 ,-2) 
FROM DUAL;

- 특정위치 버리기 
SELECT TRUNC(1234.5678),
TRUNC(1234.5678, 2 ) FROM DUAL;

- 올림 내림 가까운 정수 찾기 CEIL FLOOR 

SELECT CEIL(-3.14),CEIL(3.14),FLOOR(-3.14)
FROM DUAL;


-- 날짜형 
3달전 3달후 
SELECT SYSDATE,
ADD_MONTHS(SYSDATE,3),
ADD_MONTHS(SYSDATE,-3)
FROM DUAL;


-- 쓰는 건 셀렉트 프롬 웨어 하지만 찾는 것은 프롬 웨어 셀렉트 / 
SELECT EMPNO, ENAME, HIREDATE FROM EMP
WHERE SYSDATE >= ADD_MONTHS(HIREDATE,120) ; 

SELECT SYSDATE, ADD_MONTHS(SYSDATE, 6) FROM DUAL;



SELECT EMPNO, ENAME, HIREDATE, SYSDATE,
TRUNC(MONTHS_BETWEEN(SYSDATE,hiredate)) AS MONTHH1,
MONTHS_BETWEEN(hiredate,SYSDATE) AS MONTHH2
FROM EMP;


-연습문제
SELECT ENAME,SAL, SAL*12 AS ANSAL FROM EMP;

SELECT * FROM EMP
WHERE COMM IS NULL AND DEPTNO IN (10,20) AND JOB != 'PRESIDENT';

SELECT ENAME, LOWER(SUBSTR(ENAME,1,3)) AS NAME
FROM EMP ;

SELECT ENAME, SUBSTR(LOWER(ENAME)) AS NAME   --- 순서다르면 안되네 
FROM EMP;


SELECT *FROM EMP;

-- 날짜 형식 지정

SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI;SS') AS 현재날짜시간
FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS 현재날짜시간
FROM DUAL;

--숫자 문자 날짜 

SELECT TO_NUMBER('1,300','999,999') FROM DUAL ;  

SELECT TO_DATE('2018-07-14', 'YYYY-MM-DD') FROM DUAL ;


---  NULL 처리 
SELECT  SAL , COMM , SAL+COMM , 
NVL(COMM,0) , NVL(SAL+COMM, 0 )
FROM EMP;

SELECT  SAL , COMM , 
NVL2(COMM,'o','X') , NVL(SAL+COMM, 0 )
FROM EMP;

-- 다중행 함수 
-SUM
SELECT SUM(SAL) FROM EMP;

SELECT AVG(SAL) FROM EMP;






---COUNT

SELECT COUNT(*) FROM EMP
WHERE DEPTNO = 30;


SELECT MIN(HIREDATE)
FROM EMP;


